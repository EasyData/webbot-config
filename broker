#!/usr/bin/env python
# simple broker for webbot

from twisted.internet import reactor
from twisted.python import log
from twisted.python.logfile import DailyLogFile
from txzmq import ZmqEndpoint, ZmqFactory, ZmqPullConnection
from operator import itemgetter
import logging
import math
import redis
import sys

try:
    import cPickle as pickle
except ImportError:
    import pickle

class Broker(object):

    def __init__(self, zmq_uri, redis_uri):

        log.msg('bind: %s'%zmq_uri)

        ze = ZmqEndpoint('bind', zmq_uri)
        zf = ZmqFactory()
        zf.registerForShutdown()
        self.cnn = ZmqPullConnection(zf, ze)
        self.cnn.onPull = self.process
        self.rdb = redis.StrictRedis.from_url(redis_uri)

    def process(self, msg):

        try:
            buf = msg[0]
            item = pickle.loads(buf)
            if self.filter(item):
                pass
        except:
            log.err()

    def filter(self, item):

        for site in ['suning', 'amazon', 'yixun']:
            if site+'.c' in item.get('url', ''):
                break
        else:
            return False

        id, new_comments, time = itemgetter('id', 'comments', 'time')(item)
        self.rdb.sadd('%s:all'%site, id)
        old_comments = self.rdb.zscore('%s:hot'%site, id) or 0
        if new_comments-old_comments>10:
            log.msg('%s: %s (%d => %d)'%(site, id, old_comments, new_comments))
            self.rdb.zadd('%s:hot'%site, new_comments, id)
            self.rdb.rpush('%s:pending'%site, id)
            return True
        return False

    def run(self):

        reactor.run()

if __name__=='__main__':

    #log.startLogging(DailyLogFile.fromFullPath("/tmp/suning-broker.log"))
    log.startLogging(sys.stderr)

    Broker(
        'tcp://*:4400',
        'redis://localhost:6379/10'
    ).run()

