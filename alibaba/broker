#!/usr/bin/env python
# Broker for <http://go.1688.com>

from twisted.internet import reactor
from twisted.python import log
from twisted.python.logfile import DailyLogFile
from txzmq import ZmqEndpoint, ZmqFactory, ZmqPullConnection
import operator
import logging
import math
import pymongo
import redis
import sys
import time

try:
    import cPickle as pickle
except ImportError:
    import pickle

###############################################
# ------------------ timeline --------------- #
#   go: idx -> pending -> running -> finished #
# corp: idx -> contact -> detail -> geo       #
###############################################

class RedisDBA(object):

    def __init__(self, broker, rdb_uri):

        self.broker = broker
        log.msg('connect: %s'%rdb_uri)
        self.rdb = redis.StrictRedis.from_url(rdb_uri)
        self.timeout = 300

    def filter(self, item):

        now = time.time()
        item['time'] = now
        meta = item['_meta']
        oid = item['oid']

        if meta=='alibaba:go:idx':

            if self.rdb.sadd('alibaba:go:idx', oid):
                self.rdb.zadd('alibaba:go:timeline', now, oid)
                self.rdb.rpush('alibaba:go:pending', oid)

                mid = item['mid']
                if self.rdb.sadd('alibaba:corp:idx', mid):
                    self.rdb.rpush('alibaba:corp:contact:pending', mid)
                    self.rdb.rpush('alibaba:corp:detail:pending', mid)
                    self.rdb.rpush('alibaba:corp:geo:pending', mid)

                return True

            else:

                if self.rdb.zrank('alibaba:go:finished', oid)!=None:
                    return False

                zscore = self.rdb.zscore('alibaba:go:timeline', oid)
                delta = now-zscore
                if delta>self.timeout:
                    self.rdb.zadd('aliabab:go:timeline', now, oid)
                    self.rdb.lpush('alibaba:go:pending', oid)
                    return True
                else:
                    return False

        elif meta=='alibaba:go:detail':

            patch = self.broker.mdba.find(oid)
            item.update(patch)

            if self.rdb.sismember('alibaba:go:idx', oid):
                for cate in item['cates']:
                    self.rdb.zadd('alibaba:go:cate:%s'%cate, now, oid)
                return self.rdb.zadd('alibaba:go:finished', now, oid)
            else:
                log.msg('ignore: %s'%oid)
                return False
        else:
            return False

class MongoDBA(object):

    def __init__(self, broker, mongo_uri):

        self.broker = broker
        log.msg('connect: %s'%mongo_uri)
        parsed = pymongo.uri_parser.parse_uri(mongo_uri)
        host, port = parsed['nodelist'][0]
        db, tbl = parsed['database'], parsed['collection']
        self.mdb = pymongo.MongoClient(host, port)[db]

    def find(self, oid):

        item = self.mdb.go_idx.find_one({'oid':oid})
        keys = ['oid', 'mid', 'icons', 'buyer']
        vals = operator.itemgetter(*keys)(item)
        return dict(zip(keys, vals))

    def save(self, item):

        meta = item.pop('_meta')

        if meta=='alibaba:go:idx':
            self.mdb.go_idx.update({'oid':item['oid']}, item, upsert=True)
        elif meta=='alibaba:go:detail':
            self.mdb.go_detail.update({'oid':item['oid']}, item, upsert=True)

class Broker(object):

    def __init__(self, zmq_uri, rdb_uri, mdb_uri):

        log.msg('bind: %s'%zmq_uri)

        ze = ZmqEndpoint('bind', zmq_uri)
        zf = ZmqFactory()
        zf.registerForShutdown()
        self.cnn = ZmqPullConnection(zf, ze)
        self.cnn.onPull = self.process
        self.rdba = RedisDBA(self, rdb_uri)
        self.mdba = MongoDBA(self, mdb_uri)

    def process(self, msg):

        try:
            buf = msg[0]
            item = pickle.loads(buf)
            if self.rdba.filter(item):
                log.msg('receive: %(_meta)s (%(oid)s)'%item)
                self.mdba.save(item)
        except:
            log.err()

    def run(self):

        reactor.run()

if __name__=='__main__':

    #log.startLogging(DailyLogFile.fromFullPath("/tmp/alibaba-go-broker.log"))
    log.startLogging(sys.stdout)

    zmq_uri = 'tcp://*:1688'
    rdb_uri = 'redis://localhost:6379/9'
    mdb_uri = 'mongodb://localhost:27017/alibaba.go'
    Broker(zmq_uri, rdb_uri, mdb_uri).run()

